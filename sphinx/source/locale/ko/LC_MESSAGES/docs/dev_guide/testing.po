# SOME DESCRIPTIVE TITLE.
# Copyright (C) Â© Copyright 2015-2018, Anaconda and Bokeh Contributors.
# This file is distributed under the same license as the Bokeh package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Bokeh 1.1.0dev12-5-g50b404880\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-29 15:17+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/docs/dev_guide/testing.rst:4
msgid "Testing"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:6
msgid ""
"Bokeh is a large, multi-language project, and relies on varied and "
"extensive tests and testing tools in order to maintain capability and "
"prevent regressions. This chapter describes how to run various tests "
"locally in a development environment, guidelines for writing tests, and "
"information regarding the continuous testing infrastructure."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:17
msgid "Running Tests Locally"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:19
msgid ""
"Before attempting to run Bokeh tests, make sure you have successfully run"
" through all of the instructions in the :ref:`devguide_setup` section of "
"the Developer's Guide."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:24
msgid "Test Selection"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:26
msgid ""
"Additionally, on some platforms you may need to increase the maximum "
"number of open file descriptors as some tests open many files to test the"
" server."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:33
msgid ""
"To run all the basic python unit tests, run the following command at the "
"top level of the repository:"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:40
msgid ""
"Note that this includes unit tests that require Selenium to be installed."
" To exclude those unit tests, you can run the command:"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:47
msgid "To run just the BokehJS unit tests, execute:"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:53
msgid ""
"Alternatively, you can also navigate to the `bokehjs` subdirectory of the"
" source checkout and execute:"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:60
msgid ""
"You can run all available tests (python and JS unit tests, as well as "
"example and integration tests) **from the top level directory** by "
"executing:"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:67
msgid ""
"To learn more about marking test functions and selecting/deselecting them"
" for a run, please consult the pytest documentation for `custom "
"markers`_. The list of currently defined test markers is below:"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:71
msgid "``codebase``: a test for codebase quality or policy"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:72
msgid "``examples``: an examples image-diff test"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:73
msgid "``integration``: an integration test"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:74
msgid "``js``: a javascript test"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:75
msgid "``sampledata``: a test for ``bokeh.sampledata``"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:76
msgid "``selenium``: a test requiring selenium"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:77
msgid "``unit``: a python unit test"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:80
msgid "Code Coverage"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:82
msgid "To run any of the tests with coverage use the following:"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:88
msgid ""
"To report on a subset of the Bokeh package, pass e.g. "
"``-cov=bokeh/models``."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:91
msgid "Other Options"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:93
msgid "To run any of the tests without standard output captured use:"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:99
msgid ""
"See the `pytest`_ documentation for further information on ``py.test`` "
"and its options."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:103
msgid "Examples tests"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:105
msgid ""
"The ``examples`` tests run a selection of the Bokeh examples and generate"
" images to compare against previous releases. A report is generated that "
"displays the current and previous images, as well as any image "
"difference."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:110
msgid ""
"The tests do not currently fail if the images are different, the test "
"report must be inspected manually."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:113
msgid "To run just the examples tests, run the command:"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:119
msgid ""
"After the tests have run, you will be able to see the test report at "
"``examples.html``. Running locally, you can name the test report whatever"
" you want. On TravisCI, the examples report is always ``examples.html``."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:123
msgid ""
"The examples tests can run slowly, to speed them up, you can parallelize "
"them:"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:129
msgid "Where ``n`` is the number is the number of cores you want to use."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:131
msgid ""
"In addition, the examples tests generate a log file, examples.log which "
"you can view at ``examples.log`` in the same directory that you the tests"
" were run from."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:136
msgid ""
"Server examples do get run, but phantomJS cannot currently capture the "
"output, so they are always blank in the test results"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:140
msgid "Integration tests"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:143
msgid "Writing Tests"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:145
msgid ""
"In order to help keep Bokeh maintainable, all Pull Requests that touch "
"code should normally be accompanied by relevant tests. While exceptions "
"may be made for specific circumstances, the default assumption should be "
"that a Pull Request without tests may not be merged."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:151
msgid "Python Unit Tests"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:153
msgid ""
"Python unit tests maintain the basic functionality of the Python portion "
"of the Bokeh library. A few general guidelines will help you write Python"
" unit tests:"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:164
msgid "absolute imports"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:158
msgid ""
"In order to ensure that Bokeh's unit tests as relocatable and unambiguous"
" as possible, always prefer absolute imports in test files. When "
"convenient, import and use the entire module under test:"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:162
msgid "**GOOD**: ``import bokeh.models.transforms as bmt``"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:163
msgid "**GOOD**: ``from bokeh.embed import components``"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:164
msgid "**BAD**: ``from ..document import Document``"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:176
msgid "markers"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:167
msgid ""
"By default any unmarked test is considered part of the ``unit`` group. If"
" a unit test needs an additional mark (e.g. ``selenium``) then the "
"``unit`` marker must be supplied explicitly:"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:181
msgid "pytest"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:179
msgid ""
"All new tests should use and assume `pytest`_ for test running, fixtures,"
" parameterized testing, etc. New tests should *not* use the ``unittest`` "
"module of the Python standard library."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:184
msgid "JavaScript Unit Tests"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:186
msgid ""
"These tests maintain the functionality of the BokehJS portion of the "
"Bokeh project. The BokehJS tests are located in :bokeh-"
"tree:`bokehjs/test`. They are written using Chai \"expect\" style. If new"
" test files are added, an appropriate entry in the directory ``index`` "
"file should be added."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:192
msgid "Integration Tests"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:194
msgid ""
"To add a new screen shot integration test, first make sure you can run "
"existing screen shot tests, for example :bokeh-"
"tree:`tests/integration/annotations/test_whisker.py`. New screen shot "
"tests should follow the general guidelines:"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:199
msgid ""
"Be as simple as possible (only include things under test and nothing "
"extra)"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:201
msgid "Prefer the ``bokeh.models`` API"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:203
msgid ""
"Once a new test is written, a base image for comparison is needed. To "
"create a new base image, add ``--set-new-base-screenshot`` to your the "
"standard ``py.test`` command to run the test. This will generate an image"
" with the name ``base__<name_of_your_test>.png`` in the appropriate "
"directory. Use ``git`` to check this image into the repository, and then "
"all future screen shot tests will be compared against this base image."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:211
msgid "Continuous Integration"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:213
msgid ""
"Every push to the `master` branch or any Pull Request branch on GitHub "
"automatically triggers a full test build on the `TravisCI`_ continuous "
"integration service. This is most often useful for running the full Bokeh"
" test suite continuously, but also triggers automated scripts for "
"publishing releases when a tagged branch is pushed."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:219
msgid ""
"You can see the list of all current and previous builds at this URL: "
"https://travis-ci.org/bokeh/bokeh"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:222
msgid ""
"From there you can navigate to the build page for any specific build "
"(e.g. for the latest merge to master, or a particular Pull Request). A "
"typical build page looks like the image below:"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:230
msgid ""
"As seen, the status of all build stages and jobs can be quickly "
"inspected. When everything is running smoothly, all jobs will have a "
"green check mark."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:234
msgid "Configuration"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:236
msgid "There are a number of files that affect the build configuration:"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:240
msgid ":bokeh-tree:`.travis.yml`"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:239
msgid ""
"Defines the build matrix and global configurations for the stages "
"described below."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:245
msgid ":bokeh-tree:`conda.recipe/meta.yaml`"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:243
msgid ""
"Instructions for building a conda noarch package for Bokeh. This file is "
"the single source of truth for build and test (but not runtime) "
"dependencies."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:249
msgid ":bokeh-tree:`setup.py`"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:248
msgid ""
"Used to build sdist packages and \"dev\" installs. This file is also the "
"single source of truth for runtime dependencies."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:253
msgid ":bokeh-tree:`setup.cfg`"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:252
msgid ""
"Contains some global configuration for build and test tools such as "
"``versioneer`` and ``pytest``."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:256
msgid "Build Stages"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:259
msgid "Build"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:261
msgid ""
"The ``Build`` stage has a single job that is responsible for creating a "
"``noarch`` conda package for Bokeh. This ensures both that the BokehJS "
"can be built correctly, and that important release packaging machinery is"
" always functional. Additionally artifacts from this build, such as the "
"conda package, and the BokehJS build directory, are saved to be re-used "
"by future jobs, speeding up the entire build."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:268
msgid "The controlling script is :bokeh-tree:`scripts/ci/build`"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:271
msgid "Test"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:273
msgid ""
"The ``Test`` stage is comprised of several jobs that run all the various "
"Bokeh tests."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:276
msgid ""
"The controlling script is :bokeh-tree:`scripts/ci/test`, which calls a "
"separate ``test:<GROUP>`` script for each of the following test groups:"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:283
msgid "``examples``"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:280
msgid ""
"This job executes a large portion of the Bokeh examples to ensure that "
"they run without any Python or JavaScript errors. Additionally, the job "
"for ``PYTHON=2.7`` generates images for the examples and a report that "
"compares the images to previous versions."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:286
msgid "``integration``"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:286
msgid "This job executes an integration test, e.g. a Selenium browser test."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:289
msgid "``js``"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:289
msgid "This job runs all the JavaScript unit tests (i.e. ``node make test``)"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:293
msgid "``unit``"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:292
msgid ""
"This job runs all the Python unit tests (i.e. ``py.test -m unit``). The "
"tests are run on different jobs for Python versions 2.7 and 3.5+."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:298
msgid "``docs``"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:296
msgid ""
"This job runs the documentation build. For more information about "
"building or contributing documentation see the "
":ref:`devguide_documentation` section of the Developer's guide."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:301
msgid "``codebase``"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:301
msgid "This job runs tests that maintain code quality and package integrity."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:304
msgid "Deploy"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:306
msgid ""
"The ``Deploy`` stage has a single job that is responsible for executing "
"all the work necessary to complete a Bokeh release. This includes tasks "
"such as:"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:309
msgid "Building and publishing conda and sdist packages"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:310
msgid "Making BokehJS assets available on CDN"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:311
msgid "Building and deploying the Bokeh documentation site"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:312
msgid "Generating and uploading Bokeh examples tarballs"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:313
msgid "Publishing BokehJS NPM packages"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:315
msgid ""
"All of these steps are performed for full releases, however some may be "
"omitted for dev builds and release candidates."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:318
msgid "The controlling script is :bokeh-tree:`scripts/ci/deploy`"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:321
msgid "Etiquette"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:323
msgid ""
"TravisCI provides five free build workers to Open Source projects. A few "
"considerations will help you be considerate of others needing these "
"limited resources:"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:327
msgid ""
"Group commits into meaningful chunks of work before pushing to GitHub "
"(i.e. don't push on every commit)."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:330
msgid ""
"If you must make multiple commits in succession, navigate to TravisCI and"
" cancel all but the last build, in order to free up build workers."
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:333
msgid ""
"If expensive ``examples`` tests are not needed (e.g. for a docs-only Pull"
" Request), they may be disabled by adding the text"
msgstr ""

#: ../../source/docs/dev_guide/testing.rst:340
msgid "to your commit message."
msgstr ""

