# SOME DESCRIPTIVE TITLE.
# Copyright (C) Â© Copyright 2015-2018, Anaconda and Bokeh Contributors.
# This file is distributed under the same license as the Bokeh package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Bokeh 1.1.0dev12-5-g50b404880\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-29 15:17+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/docs/reference/models/layouts.rst:4
msgid "bokeh.models.layouts"
msgstr ""

#: bokeh.models.layouts:1 of
msgid "Various kinds of layout components."
msgstr ""

#: bokeh.models.layouts.Box:1 bokeh.models.layouts.GridBox:1
#: bokeh.models.layouts.HTMLBox:1 bokeh.models.layouts.Spacer:1 of
msgid "Bases: :class:`bokeh.models.layouts.LayoutDOM`"
msgstr ""

#: bokeh.models.layouts.Box:1 of
msgid "Abstract base class for Row and Column. Do not use directly."
msgstr ""

#: bokeh.models.layouts.Box:5 bokeh.models.layouts.HTMLBox:5
#: bokeh.models.layouts.LayoutDOM:5 of
msgid ""
"This is an abstract base class used to help organize the hierarchy of "
"Bokeh model types. **It is not useful to instantiate on its own.**"
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"*property type:* :class:`~bokeh.core.properties.List` ( "
":class:`~bokeh.core.properties.Instance` ( "
":class:`~bokeh.models.layouts.LayoutDOM`  ) )"
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"The list of children, which can be other components including plots, "
"rows, columns, and widgets."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "*property type:* :class:`~bokeh.core.properties.Int`"
msgstr ""

#: ../../<bokeh-prop>:1
msgid "The gap between children (in pixels)."
msgstr ""

#: bokeh.models.layouts.Column:1 bokeh.models.layouts.Row:1 of
msgid "Bases: :class:`bokeh.models.layouts.Box`"
msgstr ""

#: bokeh.models.layouts.Column:1 of
msgid "Lay out child components in a single vertical row."
msgstr ""

#: bokeh.models.layouts.Column:3 bokeh.models.layouts.Row:3 of
msgid ""
"Children can be specified as positional arguments, as a single argument "
"that is a sequence, or using the ``children`` keyword argument."
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"*property type:* :class:`~bokeh.core.properties.Either` ( "
":class:`~bokeh.core.properties.Either` ( "
":class:`~bokeh.core.properties.Enum` ( Enumeration(auto, min, max) ), "
":class:`~bokeh.core.properties.Int`  ), "
":class:`~bokeh.core.properties.Dict` ( "
":class:`~bokeh.core.properties.Either` ( "
":class:`~bokeh.core.properties.Int` , "
":class:`~bokeh.core.properties.String`  ), "
":class:`~bokeh.core.properties.Either` ( "
":class:`~bokeh.core.properties.Either` ( "
":class:`~bokeh.core.properties.Enum` ( Enumeration(auto, min, max) ), "
":class:`~bokeh.core.properties.Int`  ), "
":class:`~bokeh.core.properties.Struct` , "
":class:`~bokeh.core.properties.Struct` , "
":class:`~bokeh.core.properties.Struct`  ) ) )"
msgstr ""

#: ../../<bokeh-prop>:1
msgid "Describes how the component should maintain its rows' heights."
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"This is an experimental feature and may change in future. Use it at your "
"own discretion."
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"*property type:* :class:`~bokeh.core.properties.List` ( "
":class:`~bokeh.core.properties.Either` ( "
":class:`~bokeh.core.properties.Tuple` ( "
":class:`~bokeh.core.properties.Instance` ( "
":class:`~bokeh.models.layouts.LayoutDOM`  ), "
":class:`~bokeh.core.properties.Int` , :class:`~bokeh.core.properties.Int`"
"  ), :class:`~bokeh.core.properties.Tuple` ( "
":class:`~bokeh.core.properties.Instance` ( "
":class:`~bokeh.models.layouts.LayoutDOM`  ), "
":class:`~bokeh.core.properties.Int` , :class:`~bokeh.core.properties.Int`"
" , :class:`~bokeh.core.properties.Int` , "
":class:`~bokeh.core.properties.Int`  ) ) )"
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"A list of children with their associated position in the grid (row, "
"column)."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "Describes how the grid should maintain its columns' widths."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "Describes how the grid should maintain its rows' heights."
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"*property type:* :class:`~bokeh.core.properties.Either` ( "
":class:`~bokeh.core.properties.Int` , "
":class:`~bokeh.core.properties.Tuple` ( "
":class:`~bokeh.core.properties.Int` , :class:`~bokeh.core.properties.Int`"
"  ) )"
msgstr ""

#: bokeh.models.layouts.HTMLBox:1 of
msgid "A component which size is determined by its HTML content."
msgstr ""

#: bokeh.models.layouts.LayoutDOM:1 of
msgid "Bases: :class:`bokeh.model.Model`"
msgstr ""

#: bokeh.models.layouts.LayoutDOM:1 of
msgid "The base class for layoutable components."
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"*property type:* :class:`~bokeh.core.properties.Either` ( "
":class:`~bokeh.core.properties.Enum` ( :class:`~bokeh.core.enums.Align`  "
"), :class:`~bokeh.core.properties.Tuple` ( "
":class:`~bokeh.core.properties.Enum` ( :class:`~bokeh.core.enums.Align`  "
"), :class:`~bokeh.core.properties.Enum` ( "
":class:`~bokeh.core.enums.Align`  ) ) )"
msgstr ""

#: ../../<bokeh-prop>:1
msgid "The alignment point within the parent container."
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"This property is useful only if this component is a child element of a "
"layout (e.g. a grid). Self alignment can be overridden by the parent "
"container (e.g. grid track align)."
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"*property type:* :class:`~bokeh.core.properties.Either` ( "
":class:`~bokeh.core.properties.Enum` ( Enumeration(auto) ), "
":class:`~bokeh.core.properties.Float`  )"
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"Describes the proportional relationship between component's width and "
"height."
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"This works if any of component's dimensions are flexible in size. If set "
"to a number, ``width / height = aspect_ratio`` relationship will be "
"maintained. Otherwise, if set to ``\"auto\"``, component's preferred "
"width and height will be used to determine the aspect (if not set, no "
"aspect will be preserved)."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "*property type:* :class:`~bokeh.core.properties.Color`"
msgstr ""

#: ../../<bokeh-prop>:1
msgid "Background color of the component."
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"*property type:* :class:`~bokeh.core.properties.List` ( "
":class:`~bokeh.core.properties.String`  )"
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"A list of CSS class names to add to this DOM element. Note: the class "
"names are simply added as-is, no other guarantees are provided."
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"It is also permissible to assign from tuples, however these are adapted "
"-- the property will always contain a list."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "*property type:* :class:`~bokeh.core.properties.Bool`"
msgstr ""

#: ../../<bokeh-prop>:1
msgid "Whether the widget will be disabled when rendered."
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"If ``True``, the widget will be greyed-out and not responsive to UI "
"events."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "*property type:* :class:`~bokeh.core.properties.NonNegativeInt`"
msgstr ""

#: ../../<bokeh-prop>:1
msgid "The height of the component (in pixels)."
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"This can be either fixed or preferred height, depending on height sizing "
"policy."
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"*property type:* :class:`~bokeh.core.properties.Either` ( "
":class:`~bokeh.core.properties.Auto` , "
":class:`~bokeh.core.properties.Enum` ( "
":class:`~bokeh.core.enums.SizingPolicy`  ) )"
msgstr ""

#: ../../<bokeh-prop>:1
msgid "Describes how the component should maintain its height."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "``\"auto\"``"
msgstr ""

#: ../../<bokeh-prop>:1
msgid "Use component's preferred sizing policy."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "``\"fixed\"``"
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"Use exactly ``height`` pixels. Component will overflow if it can't fit in"
" the available vertical space."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "``\"fit\"``"
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"Use component's preferred height (if set) and allow to fit into the "
"available vertical space withing the minimum and maximum height bounds "
"(if set). Component's height neither will be aggressively minimized nor "
"maximized."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "``\"min\"``"
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"Use as little vertical space as possible, not less than the minimum "
"height (if set). The starting point is the preferred height (if set). The"
" height of the component may shrink or grow depending on the parent "
"layout, aspect management and other factors."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "``\"max\"``"
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"Use as much vertical space as possible, not more than the maximum height "
"(if set). The starting point is the preferred height (if set). The height"
" of the component may shrink or grow depending on the parent layout, "
"aspect management and other factors."
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"This is an experimental feature and may change in future. Use it at your "
"own discretion. Prefer using ``sizing_mode`` if this level of control "
"isn't strictly necessary."
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"*property type:* :class:`~bokeh.core.properties.Tuple` ( "
":class:`~bokeh.core.properties.Int` , :class:`~bokeh.core.properties.Int`"
" , :class:`~bokeh.core.properties.Int` , "
":class:`~bokeh.core.properties.Int`  )"
msgstr ""

#: ../../<bokeh-prop>:1
msgid "Allows to create additional space around the component."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "Minimal height of the component (in pixels) if height is adjustable."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "Minimal width of the component (in pixels) if width is adjustable."
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"*property type:* :class:`~bokeh.core.properties.Enum` ( "
":class:`~bokeh.core.enums.SizingMode`  )"
msgstr ""

#: ../../<bokeh-prop>:1
msgid "How the component should size itself."
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"This is a high-level setting for maintaining width and height of the "
"component. To gain more fine grained control over sizing, use "
"``width_policy``, ``height_policy`` and ``aspect_ratio`` instead (those "
"take precedence over ``sizing_mode``)."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "Possible scenarios:"
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"Component is not responsive. It will retain its original width and height"
" regardless of any subsequent browser window resize events."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "``\"stretch_width\"``"
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"Component will responsively resize to stretch to the available width, "
"without maintaining any aspect ratio. The height of the component depends"
" on the type of the component and may be fixed or fit to component's "
"contents."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "``\"stretch_height\"``"
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"Component will responsively resize to stretch to the available height, "
"without maintaining any aspect ratio. The width of the component depends "
"on the type of the component and may be fixed or fit to component's "
"contents."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "``\"stretch_both\"``"
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"Component is completely responsive, independently in width and height, "
"and will occupy all the available horizontal and vertical space, even if "
"this changes the aspect ratio of the component."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "``\"scale_width\"``"
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"Component will responsively resize to stretch to the available width, "
"while maintaining the original or provided aspect ratio."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "``\"scale_height\"``"
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"Component will responsively resize to stretch to the available height, "
"while maintaining the original or provided aspect ratio."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "``\"scale_both\"``"
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"Component will responsively resize to both the available width and "
"height, while maintaining the original or provided aspect ratio."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "Whether the component will be visible and a part of a layout."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "The width of the component (in pixels)."
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"This can be either fixed or preferred width, depending on width sizing "
"policy."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "Describes how the component should maintain its width."
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"Use exactly ``width`` pixels. Component will overflow if it can't fit in "
"the available horizontal space."
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"Use component's preferred width (if set) and allow it to fit into the "
"available horizontal space within the minimum and maximum width bounds "
"(if set). Component's width neither will be aggressively minimized nor "
"maximized."
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"Use as little horizontal space as possible, not less than the minimum "
"width (if set). The starting point is the preferred width (if set). The "
"width of the component may shrink or grow depending on the parent layout,"
" aspect management and other factors."
msgstr ""

#: ../../<bokeh-prop>:1
msgid ""
"Use as much horizontal space as possible, not more than the maximum width"
" (if set). The starting point is the preferred width (if set). The width "
"of the component may shrink or grow depending on the parent layout, "
"aspect management and other factors."
msgstr ""

#: bokeh.models.layouts.Row:1 of
msgid "Lay out child components in a single horizontal row."
msgstr ""

#: ../../<bokeh-prop>:1
msgid "Describes how the component should maintain its columns' widths."
msgstr ""

#: bokeh.models.layouts.Spacer:1 of
msgid "A container for space used to fill an empty spot in a row or column."
msgstr ""

#: bokeh.models.layouts.WidgetBox:1 of
msgid "Bases: :class:`bokeh.models.layouts.Column`"
msgstr ""

#: bokeh.models.layouts.WidgetBox:1 of
msgid "Create a column of bokeh widgets with predefined styling."
msgstr ""

