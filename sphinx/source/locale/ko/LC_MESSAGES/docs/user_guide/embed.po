# SOME DESCRIPTIVE TITLE.
# Copyright (C) Â© Copyright 2015-2018, Anaconda and Bokeh Contributors.
# This file is distributed under the same license as the Bokeh package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Bokeh 1.1.0dev12-5-g50b404880\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-29 15:17+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/docs/user_guide/embed.rst:4
msgid "Embedding Plots and Apps"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:6
msgid ""
"Bokeh provides a variety of ways to embed plots and data into HTML "
"documents. First, a reminder of the distinction between standalone "
"documents and apps:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:14
msgid ":ref:`userguide_embed_standalone`"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:10
msgid ""
"These are Bokeh documents that are not backed by a Bokeh server. They may"
" have many tools and interactions (e.g. from ``CustomJS`` callbacks) but "
"are self-contained HTML, JavaScript, and CSS. They can be embedded into "
"other HTML pages as one large document, or as a set of sub-components "
"templated individually."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:21
msgid ":ref:`userguide_embed_apps`"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:17
msgid ""
"These are Bokeh documents that are backed by a Bokeh Server. In addition "
"to all the features of standalone documents, it is also possible to "
"connect events and tools to real Python callbacks, that execute in the "
"Bokeh server. See :ref:`userguide_server` for more information about "
"creating and running Bokeh apps."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:26
msgid "Standalone Documents"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:28
msgid ""
"This section describes how Bokeh standalone documents (i.e. those that "
"are *not* linked to a Bokeh server) may be published or embedded in a "
"variety of ways."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:34
msgid "HTML files"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:36
msgid ""
"Bokeh can generate complete HTML pages for Bokeh documents using the "
"|file_html| function. This function can emit HTML from its own generic "
"template, or a template you provide. These files contain the data for the"
" plot inline and are completely transportable, while still providing "
"interactive tools (pan, zoom, etc.) for your plot. Here is an example:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:53
msgid ""
"The returned HTML text can be saved to a file using standard python file "
"operations. You can also provide your own template and pass in custom, or"
" additional, template variables. See the |file_html| documentation for "
"more details."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:58
msgid ""
"This is a fairly low-level, explicit way to generate an HTML file, which "
"may be useful for use from a web application, e.g. a Flask app. When "
"using the |bokeh.plotting| interface in a script or Jupyter notebook, "
"users will typically call the function |output_file| in conjunction with "
"|show| or |save| instead."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:67
msgid "JSON Items"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:69
msgid ""
"Bokeh can also supply a block of JSON that can be easily consumed by a "
"BokehJS to render standalone Bokeh content in a specified div. The "
"|json_item| function accepts a Bokeh Model (e.g. a Plot), and optionally "
"a target ID that identifies a div to render into:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:81
msgid ""
"This output can be used by the ``Bokeh.embed.embed_item`` function on a "
"webpage:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:88
msgid ""
"In this situation, the Bokeh plot will render itself into a div with the "
"id *\"myplot\"*."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:91
msgid "It is also possible to omit the target id when calling |json_item|"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:100
msgid "Then the target id can be controlled on the JavaScript side:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:107
msgid ""
"As a more complete example, it a Flask server may be configured to serve "
"Bokeh JSON items from a */plot* endpoint:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:117
msgid "Then the corresponding code on the page might look like:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:127
msgid "A full example can be found a :bokeh-tree:`examples/embed/json_item.py`."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:132
msgid "Components"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:134
msgid ""
"It is also possible to ask Bokeh to return the individual components of a"
" standalone document for individual embedding using the |components| "
"function. This function returns a ``<script>`` that contains the data for"
" your plot, together with an accompanying ``<div>`` tag that the plot "
"view is loaded into. These tags can be used in HTML documents however you"
" like:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:150
msgid "The returned ``<script>`` will look something like:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:174
msgid ""
"Note that in Jupyter Notebooks, it is not possible to use components and "
"show in the same notebook cell."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:177
msgid ""
"All of the data and plot or widget objects are contained in the "
"``docs_json`` variable (contents omitted here for brevity). The resulting"
" ``<div>`` will look something like:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:185
msgid ""
"These two elements can be inserted or templated into your HTML text, and "
"the script, when executed, will replace the div with the plot."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:188
msgid ""
"Using these components assumes that BokehJS has already been loaded, for "
"instance either inline in the document text, or from CDN. To load BokehJS"
" from CDN, add the following lines in your HTML text or template with the"
" appropriate version replacing ``x.y.z``:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:209
msgid ""
"The ``\"-widgets\"`` files are only necessary if your document includes "
"Bokeh widgets. Similarly, the ``\"-tables\"`` files are only necessary if"
" you are using Bokeh data tables in your document."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:213
msgid ""
"For example, to use version ``0.12.13``, including widgets and tables "
"support:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:232
msgid ""
"You must provide the closing `</script>` tag. This is required by all "
"browsers and the page will typically not render without it."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:235
msgid ""
"In addition to a single Bokeh model (e.g. a plot), the |components| "
"function also accepts a list or tuple of models, or a dictionary of keys "
"and models. Each returns a tuple with one script script and a "
"corresponding data structure for the divs."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:240
msgid "The following illustrates how different input types correlate to outputs:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:253
msgid "Here's an example of how you would use the multiple plot generator:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:299
msgid "Running ``python scatter.py`` will print out:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:328
msgid "Then inserting the script and div elements into this boilerplate:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:349
msgid ""
"Note that above we have not included the ``\"-widgets\"`` JS and CSS "
"files, since the document does not use Bokeh widgets. If required, the "
"CDN resources are available as HTTPS URLs as well."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:353
msgid "You can see an example by running:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:362
msgid "Autoload Scripts"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:364
msgid ""
"A final way to embed standalone documents is the |autoload_static| "
"function. This function with provide a  ``<script>`` tag that will "
"replace itself with a Bokeh plot, wherever the tag happens to be located."
" The script will also check for BokehJS and load it, if necessary. Using "
"this function it is possible to embed a plot by placing this script tag "
"alone in your document."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:370
msgid ""
"This function takes a Bokeh model (e.g. a plot) that you want to display,"
" a ``Resources`` object, and a path to load a script from. Then "
"|autoload_static| will return a self-contained ``<script>`` tag, and a "
"block of JavaScript code. The JavaScript code should be saved to the path"
" you provided. The ``<script>`` tag, when it is included in a page, will "
"load and run the saved JavaScript in order to realize your plot in the "
"browser."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:377
msgid "Here is how you might use |autoload_static| with a simple plot:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:390
msgid "The resulting ``<script>`` tag looks like:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:402
msgid ""
"The script tag should be included in the HTML page wherever you wish to "
"load the plot."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:405
msgid ""
"The separate JavaScript code should be saved to a file that can be "
"reached on the server at `\"some/path\"`, from the document that has the "
"plot embedded."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:409
msgid ""
"The ``<script>`` tag loads a ``<div>`` in place, so it must be placed "
"under ``<head>``."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:415
msgid "Bokeh Applications"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:417
msgid ""
"This section describes how entire Bokeh server applications may be "
"embedded. Bokeh apps may be embedded so that every page load creates and "
"displays a new session and Document, or so that a specific, existing "
"session is loaded."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:422
msgid "App Documents"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:424
msgid ""
"When an application is running on a Bokeh server and available at some "
"URL, it is typically desired to embed the entire application in a page so"
" that whenever the page is loaded, a completely new session is created "
"and presented to the user. This can be accomplished with the "
"|server_document| function, which accepts the URL to a Bokeh server "
"application, and returns a script that will embed new sessions from that "
"server any time the script is executed."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:432
msgid "Here is an example snipped using |server_document|:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:439
msgid "The returned script tag will look something like this:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:448
msgid ""
"It can be templated in an HTML page to include the Bokeh application at "
"that point."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:452
msgid "App Sessions"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:454
msgid ""
"Sometimes, instead of loading a new session, we might wish to load a "
"*specific* session. For instance, a Flask app rendering a page for an "
"authenticated user might want to pull a new session, make some "
"customizations for the specific user, then serve the specific Bokeh "
"server session. This can be accomplished with the |server_session| "
"function which accepts a specific model to embed (or ``None`` for an "
"entire session document), session ID, and a URL to the Bokeh application."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:462
msgid "Here is an example of how to use |server_session| and Flask:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:492
msgid "Standard template"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:494
msgid ""
"Bokeh also provides a standard Jinja template that can be useful for "
"quickly embedding different document roots flexibly by extending the "
"\"base\" template. This is especially useful for embedding individual "
"components of a Bokeh app in a non-Bokeh layout (e.g. Bootstrap, etc.)."
msgstr ""

#: ../../source/docs/user_guide/embed.rst:499
msgid ""
"Below is a minimal example. Assuming that the application creates two "
"roots with names properties set:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:511
msgid ""
"Then these roots can be referred to by name in the template, and passed "
"to the ``embed`` macro to place them wherever desired:"
msgstr ""

#: ../../source/docs/user_guide/embed.rst:530
msgid ""
"The full template, with all the sections that can be overridden, is given"
" here:"
msgstr ""

